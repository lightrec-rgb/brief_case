<h1 class="text-2xl font-semibold mb-4">Create a new session</h1>

<%= form_with model: @session, url: sessions_path, method: :post,
              class: "space-y-6 max-w-xl", id: "new-session-form" do |f| %>

  <!-- Subject -->
  <div>
    <%= f.label :subject_id, "Subject", class: "block text-sm font-medium text-gray-700" %>
    <%= f.select :subject_id,
          options_for_select(subject_options_for_select(current_user), @subject&.id),
          {},
          class: "mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus:border-brand-blue focus:ring-2 focus:ring-brand-blue",
          data: { subject_counts: @subject_card_counts.to_json } %>
  </div>

  <!-- Session name -->
  <div>
    <%= f.label :name, "Session name", class: "block text-sm font-medium text-gray-700" %>
    <%= f.text_field :name,
          class: "mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus:border-brand-blue focus:ring-2 focus:ring-brand-blue",
          placeholder: "e.g., Exam Review" %>
  </div>

  <!-- Card types -->
  <div>
    <span class="block text-sm font-medium text-gray-700 mb-1">Card types</span>

    <div id="entry-scope-group" class="grid gap-2 sm:grid-cols-3">
      <label class="inline-flex items-center gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus-within:ring-2 focus-within:ring-brand-blue">
        <%= f.radio_button :entry_scope, "both", checked: true, class: "h-4 w-4" %>
        <span>Both (cases & provisions)</span>
      </label>

      <label class="inline-flex items-center gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus-within:ring-2 focus-within:ring-brand-blue">
        <%= f.radio_button :entry_scope, "cases", class: "h-4 w-4" %>
        <span>Cases only</span>
      </label>

      <label class="inline-flex items-center gap-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus-within:ring-2 focus-within:ring-brand-blue">
        <%= f.radio_button :entry_scope, "provisions", class: "h-4 w-4" %>
        <span>Provisions only</span>
      </label>
    </div>
  </div>

  <!-- Available cards -->
  <div>
    <span class="block text-sm font-medium text-gray-700 mb-1">Available cards</span>
    <span id="available-count"
          class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-base text-gray-700">0</span>
  </div>

  <!-- Card count -->
  <div>
    <%= f.label :count, "How many cards? (leave blank for all)", class: "block text-sm font-medium text-gray-700" %>
    <%= f.number_field :count,
          min: 0, step: 1,
          class: "mt-1 block w-40 rounded-md border border-gray-300 bg-white px-3 py-2 text-base shadow-sm focus:border-brand-blue focus:ring-2 focus:ring-brand-blue" %>
  </div>

  <!-- Actions -->
  <div class="pt-2">
    <%= f.submit "Create session",
          class: "inline-flex items-center rounded-md bg-brand-blue px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gold focus:outline-none focus:ring-2 focus:ring-brand-blue" %>
    <%= link_to "Cancel", sessions_path, class: "ml-3 text-sm underline" %>
  </div>
<% end %>

<script>
(function () {
  const form = document.getElementById("new-session-form");
  if (!form) return;

  const subjectSelect = form.querySelector("select[name='session[subject_id]']");
  const scopeRadios   = form.querySelectorAll("input[name='session[entry_scope]']");
  const badge         = document.getElementById("available-count");

  const counts = (() => {
    try { return JSON.parse(subjectSelect.dataset.subjectCounts || "{}"); }
    catch (e) { return {}; }
  })();

  function currentScope() {
    const checked = Array.from(scopeRadios).find(r => r.checked);
    return (checked && checked.value) || "both";
  }

  function updateBadge() {
    const subjId = subjectSelect.value;
    const scope  = currentScope();
    const c      = (counts[subjId] && counts[subjId][scope]) || 0;
    badge.textContent = c;
  }

  subjectSelect.addEventListener("change", updateBadge);
  scopeRadios.forEach(r => r.addEventListener("change", updateBadge));
  updateBadge();
})();
</script>
